{"version":3,"sources":["logo.svg","CanvasFlower/CanvasFlower.js","PortfoilioPiece/PortfolioPiece.js","Home/Portfolio.js","SideNav/SideNav.js","Tree/Tree.js","Random/Random.js","Canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasFlower","props","useState","width","window","innerWidth","height","innerHeight","size","setSize","ref","useRef","useEffect","addEventListener","sizeOfWindow","removeEventListener","canvas","current","c","getContext","globalCompositeOperation","number","scale","hue","Math","random","reset","console","log","clearRect","animate","angle","radius","sqrt","positionX","sin","positionY","cos","fillStyle","strokeStyle","lineWidth","beginPath","arc","PI","closePath","fill","stroke","drawFlower","setTimeout","requestAnimationFrame","useStyle","makeStyles","media","card","marginTop","marginBottom","minHeight","buttons","margin","withRouter","classes","Card","className","CardMedia","image","Typography","projectDescription","Button","variant","onClick","url","history","push","open","projectName","github","useStyles","root","backgroundColor","bullet","display","transform","title","fontSize","pos","name","color","textShadow","body","Portfolio","Grid","container","wrap","justify","alignItems","item","xs","sm","md","lg","align","style","position","top","maxWidth","Avatar","alt","src","CardContent","IconButton","location","href","description","map","project","goback","setActive","Tree","drawTree","startx","startv","len","branchWidth","color1","color2","save","shadowBlur","shadowColor","translate","rotate","moveTo","bezierCurveTo","restore","Random","line","Canvas","shouldShow","setShouldShow","active","sizeListener","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39135bc9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {useEffect, useRef, useState} from 'react';\nimport './CanvasFlower.css';\n\n\nconst CanvasFlower = (props) => {\n    const [done, setDone] = useState(false);\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight});\n    const ref = useRef();\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        // window.location.reload();\n    }\n\n    useEffect(() => { \n        const canvas = ref.current;\n        const c = canvas.getContext('2d');\n        c.globalCompositeOperation = 'destination-over';\n\n\n        let number = 0;\n        let scale = 10;\n        let hue = Math.random() * 360;\n\n        function reset(){\n            console.log('trying to reset');\n            console.log(`number is:${number} scale is:${scale}`);\n        c.clearRect(0, 0, canvas.width, canvas.height);\n        number = 0;\n        scale = 10;\n        hue = Math.random() * 360;\n        animate();\n        }\n        \n        function drawFlower() {\n            let angle = number * .9;\n            let radius = scale * Math.sqrt(number);\n            let positionX = radius * Math.sin(angle) + canvas.width / 2;\n            let positionY = radius * Math.cos(angle) + canvas.height / 2;\n            c.fillStyle = `hsl(${hue}, 100%, 50%)`;\n            c.strokeStyle = `hsl(${hue}-1, 100%, 50%)`;\n            c.lineWidth = 15;\n            c.beginPath();\n            c.arc(positionX, positionY, number, 0, Math.PI * 2);\n            c.closePath();\n            c.fill();\n            c.stroke();\n            hue += .05;\n            number += .3;\n        }\n\n        const animate = () => {\n            drawFlower();\n            if (number > 250) {\n               return setTimeout(() => {\n                     reset();\n                }, 2000);\n                // return reset();\n            }else {\n            requestAnimationFrame(animate);}\n        }\n        animate();\n    });\n\n\n\n    return(\n        <>\n        <canvas \n        ref={ref}\n        width={size.width}\n        height={size.height}\n        ></canvas>\n\n        </>\n    );\n}\n\nexport default CanvasFlower;","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, CardMedia, Typography, Button, makeStyles } from '@material-ui/core';\nimport { withRouter } from 'react-router';\n\nconst useStyle = makeStyles({\n    media:{\n        height: 250\n    },\n    card:{\n        marginTop: 40,\n        marginBottom: 40,\n        minHeight: 300\n    },\n    buttons:{\n        margin: 15\n    }\n})\n\n\nfunction PortfolioPiece(props){\n  const  classes = useStyle();\n\n  const toProject = () => {\n      if(props.url === \"/canvas\"){\n          props.history.push(props.url)\n        }else window.open(props.url)\n  }\n  const toGitHub = () => {\n      window.open(props.github)\n  }\n    return(\n        <>\n        <Card className={classes.card}>\n            <CardMedia \n                className={classes.media}\n                image={props.image}\n            />\n            <Typography>{props.projectDescription}</Typography>\n        \n                <Button \n                className={classes.buttons} \n                variant='outlined' \n                onClick={toProject}>\n                    To {props.projectName}\n                </Button>\n\n                {props.github != \"none\" && \n                    <Button \n                    className={classes.buttons} \n                    variant='outlined' \n                    onClick={toGitHub}>To GitHub</Button>}\n\n        </Card>\n        </>\n    );\n}\n\n\nexport default withRouter(PortfolioPiece);","import React, { useState, useEffect} from 'react';\nimport './Portfolio.css';\nimport { withRouter } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport PortfolioPiece from '../PortfoilioPiece/PortfolioPiece';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\n\n\nconst useStyles = makeStyles({\n    root: {\n        minHeight: window.innerHeight,\n        backgroundColor: 'rgba(0,0,0,.5)'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    name: {\n        color: 'white',\n        textShadow: \"1.5px 3.5px black\"\n    },\n    body:{\n        \n        color:'white',\n        textShadow: \"1.5px 1.5px black\",\n    },\n    media:{\n        marginTop: 40,\n        height: 200,\n        width: 200,\n    },\n});\n\n\nexport default  function Portfolio(props) {\n    const classes = useStyles();\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n    const projects = [\n        {\n            name:'Herdsman',\n            image: \"herdsman.png\",\n            description: 'Herdsman, A herd management system for ranchers',\n            url: \"https://herdsman.herokuapp.com/#/home\",\n            github: \"https://github.com/dustincote/eda-solo-project\"\n        },\n\n        {\n            name: 'Html5 Canvas Fun',\n            image: \"canvasfun.png\",\n            description: 'Just some fun with Canvas',\n            url: \"/canvas\",\n            github: \"none\"\n        },\n        {\n            name: 'Image Gallery',\n            image: \"imagegallery.png\",\n            description: 'First ever react App',\n            url: \"/https://ancient-spire-49988.herokuapp.com/\",\n            github: \"https://github.com/dustincote/image-gallery\"\n        },\n        {\n            name: 'ToDo app',\n            image: \"todoapp.png\",\n            description: 'Simple Jquery ToDo App',\n            url: \"https://intense-savannah-07225.herokuapp.com/\",\n            github: \"https://github.com/dustincote?tab=repositories\"\n        },\n\n    ]\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        console.log(`Width: ${window.innerWidth} Height: ${window.innerHeight}`);\n    }\n\n    const goToGitHub = () => {\n        window.open(\"https://github.com/dustincote\");\n    };\n\n    const goToLinkedIn = () => {\n        window.open(\"https://www.linkedin.com/in/dustin-t-cote/\");\n    };\n\n    const goToEmail = () => {\n        window.location.href = \"mailto:dustincote@hotmail.com?subject=More Info Requested%20From%20Portfolio\";\n    }\n\n    return(\n\n        <div>\n            <Grid container wrap='nowrap' justify='flex-start' alignItems='center' >\n                <Grid item xs={8} sm={5} md={4} lg={3} align='center'>\n                    \n                        <Card className={classes.root} style={{height:size.height, position:'fixed', top:0, maxWidth: 300}}>\n                        <Grid item xs={10}>\n                            <Avatar alt=\"Headshot\" src=\"headshot.jpg\" className={classes.media}/>\n                            <CardContent>\n                                <Typography variant='h3' className={classes.name}>Dustin Cote</Typography>\n                                <Typography className={classes.body}>Full Stack Developer</Typography><br/>\n                                <Typography className={classes.body}> I will be graduating from Emerging Digital Academy\n                                in the beginning of December 2020, I have a passion for technology and a desire to \n                                learn new things.\n                                </Typography><br/>\n                                <Typography className={classes.body}> Contact Me:</Typography>\n                                <Typography className={classes.body}>dustincote@hotmail.com</Typography>\n                                <IconButton onClick={goToLinkedIn} className={classes.body}><LinkedInIcon/></IconButton>\n                                <IconButton onClick={goToGitHub} className={classes.body}><GitHubIcon/></IconButton>\n                                <IconButton onClick={goToEmail} className={classes.body}><ContactMailIcon/></IconButton>\n\n                            </CardContent>\n                        </Grid>\n                        </Card>\n                </Grid>\n                <Grid container justify='center' alignItems='center'>\n                    {projects.map(project =>  <Grid key={project.name} item xs={12} md={12} lg={6} align='center' >\n                       <Grid item xs={10} md={8}>\n                            <PortfolioPiece\n                            key={project.name}\n                            image={project.image}\n                            projectDescription={project.description}\n                            projectName={project.name}\n                            url={project.url}\n                            github={project.github}\n                             />\n                        </Grid>\n                    </Grid>)}\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport '../Home/Portfolio.css';\nimport { withRouter } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport { CardActions } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        minHeight: window.innerHeight,\n        backgroundColor: 'rgba(0,0,0,.5)',\n        \n    },\n    goback:{\n        color:'black',\n        width: 80\n    },\n    name: {\n        color: 'white',\n        textShadow: \"1.5px 3.5px black\"\n    },\n    body: {\n\n        color: 'white',\n        textShadow: \"1.5px 1.5px black\",\n    },\n    media: {\n        marginTop: 40,\n        height: 200,\n        width: 200,\n    },\n});\n\n\nfunction SideNav(props) {\n    const classes = useStyles();\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    }\n\n    const goBack = () => {\n        console.log('goBack was clicked');\n        props.history.push('/');\n    }\n\n    return (\n\n        <div>\n            <Grid container wrap='nowrap' justify='flex-start' alignItems='center' >\n                <Grid item xs={8} sm={5} md={4} lg={2} align='center'>\n\n                    <Card className={classes.root} style={{ height: size.height}}>\n                        <Grid item xs={10}>\n                            <Avatar alt=\"Headshot\" src=\"headshot.jpg\" className={classes.media} />\n                            <CardContent>\n                                <Typography variant='h3' className={classes.name}>Dustin Cote</Typography>\n                                <Typography className={classes.body}>Full Stack Developer</Typography>\n                                <Typography className={classes.body}>DustinCote@hotmail.com</Typography><br/>\n                                <Typography className={classes.body}>The tree will take a while to render</Typography><br/>\n\n                                \n                            </CardContent>\n                                <Button className={classes.goback} onClick={() => props.setActive('fibflower')} variant='contained' > Spiral</Button><br /><br />\n                                <Button className={classes.goback} onClick={() => props.setActive('tree')} variant='contained' > Tree</Button><br /><br />\n                                <Button className={classes.goback} onClick={() => props.setActive('random')} variant='contained' > Random</Button><br /><br />\n                                <Button className={classes.goback} onClick={goBack} variant='contained' ><ArrowBackIcon/> Back</Button>\n                            \n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default withRouter(SideNav)","import React, { useEffect, useRef, useState } from 'react';\nimport './Tree.css';\n\n\nconst Tree = (props) => {\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    const ref = useRef();\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        // window.location.reload();\n    }\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const c = canvas.getContext('2d');\n        c.globalCompositeOperation = 'destination-over';\n\n\n        function drawTree(startx, startv, len, angle, branchWidth, color1, color2) {\n            c.beginPath();\n            c.save();\n            c.strokeStyle = color1;\n            c.fillStyle = color2;\n            c.shadowBlur = 15;\n            c.shadowColor = 'black';\n            c.lineWidth = branchWidth;\n            c.translate(startx, startv);\n            c.rotate(angle * Math.PI / 180);\n            c.moveTo(0, 0);\n            // c.lineTo(0, -len);\n            if (angle > 0) {\n                c.bezierCurveTo(20, -len / 2, 20, -len / 2, 0, -len);\n            } else {\n                c.bezierCurveTo(20, -len / 2, -20, -len / 2, 0, -len);\n            }\n            c.stroke();\n\n            if (len < 10) {\n                c.beginPath();\n                c.arc(0, -len, 10, 0, Math.PI / 2);\n                c.fill();\n                c.restore();\n                return;\n            }\n            drawTree(0, -len, len * 0.83, angle + 9, branchWidth * 0.6);\n            drawTree(0, -len, len * 0.83, angle - 9, branchWidth * 0.6);\n            c.restore();\n\n\n        }\n\n        drawTree(canvas.width / 2, canvas.height - 70, 100, 0, 25, 'brown', 'green');\n    });\n\n\n\n    return (\n        <>\n            <canvas\n                ref={ref}\n                width={size.width}\n                height={size.height}\n            ></canvas>\n\n        </>\n    );\n}\n\nexport default Tree;","import React, { useEffect, useRef, useState } from 'react';\nimport './Random.css';\n\n\nconst Random = (props) => {\n    const [done, setDone] = useState(false);\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    const ref = useRef();\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        // window.location.reload();\n    }\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const c = canvas.getContext('2d');\n        c.globalCompositeOperation = 'destination-over';\n\n\n        let number = 0;\n        let scale = Math.random() * 5 + 2;\n        let line = Math.random() * 8 + 1\n        let hue = Math.random() * 360;\n\n        function reset() {\n            console.log('trying to reset');\n            console.log(`number is:${number} scale is:${scale}`);\n            c.clearRect(0, 0, canvas.width, canvas.height);\n            number = 0;\n            scale = Math.random() * 5 + 2;\n            hue = Math.random() * 360;\n            line = Math.random() * 8 + 1;\n            animate();\n        }\n\n        function drawFlower() {\n            let angle = number * .9;\n            let radius = scale * Math.sqrt(number);\n            let positionX = radius * Math.sin(angle) + canvas.width / 2;\n            let positionY = radius * Math.cos(angle) + canvas.height / 2;\n            c.fillStyle = `hsl(${hue}, 100%, 50%)`;\n            c.strokeStyle = `hsl(${hue}-1, 100%, 50%)`;\n            c.lineWidth = line;\n            c.beginPath();\n            c.arc(positionX, positionY, number, 0, Math.PI * 2);\n            c.closePath();\n            c.fill();\n            c.stroke();\n            hue += .05;\n            number += .3;\n        }\n\n        const animate = () => {\n            drawFlower();\n            if (number > 200) {\n                return setTimeout(() => {\n                    reset();\n                }, 2000);\n                // return reset();\n            } else {\n                requestAnimationFrame(animate);\n            }\n        }\n        animate();\n    });\n\n\n\n    return (\n        <>\n            <canvas\n                ref={ref}\n                width={size.width}\n                height={size.height}\n            ></canvas>\n\n        </>\n    );\n}\n\nexport default Random;","import React, { useState, useEffect } from 'react';\nimport CanvasFlower from '../CanvasFlower/CanvasFlower';\nimport SideNav from '../SideNav/SideNav';\nimport Button from '@material-ui/core/Button';\nimport Tree from '../Tree/Tree';\nimport Random from '../Random/Random';\n\n\n\nfunction Canvas(props) {\n const [shouldShow, setShouldShow] = useState(true);\n const [active, setActive] = useState('fibflower');\n    useEffect(() => {\n        window.addEventListener('resize', sizeListener);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeListener);\n        }\n    }, []);\n\nconst sizeListener = () => {\n    setShouldShow(false);\n    setTimeout(() =>  setShouldShow(true), 10);\n}\n\nconst goBack = () => {\n    console.log('button clicked');\n}\n\n    return(\n        <>\n        <SideNav setActive={setActive} />\n        {shouldShow && active === 'fibflower' &&<CanvasFlower/>}\n        {shouldShow && active === 'tree' &&<Tree/>}\n        {shouldShow && active === 'random' && <Random />}\n        </>\n    );\n}\n\nexport default Canvas;","import logo from './logo.svg';\nimport './App.css';\nimport CanvasFlower from './CanvasFlower/CanvasFlower';\nimport Portfolio from './Home/Portfolio';\nimport Canvas from './Canvas/Canvas';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n        <Route\n        exact\n        path=\"/\"\n        >\n            <Portfolio />\n\n          {/* <CanvasFlower /> */}\n        </Route>\n\n        <Route path=\"/canvas\">\n          <Canvas />\n        </Route>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}