{"version":3,"sources":["logo.svg","CanvasFlower/CanvasFlower.js","PortfoilioPiece/PortfolioPiece.js","HomeNav/HomeNav.js","Home/Portfolio.js","SideNav/SideNav.js","Tree/Tree.js","Random/Random.js","Canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasFlower","props","useState","width","window","innerWidth","height","innerHeight","size","setSize","ref","useRef","useEffect","addEventListener","sizeOfWindow","removeEventListener","canvas","current","c","getContext","globalCompositeOperation","stop","number","scale","hue","Math","random","reset","clearRect","animate","angle","radius","sqrt","positionX","sin","positionY","cos","fillStyle","strokeStyle","lineWidth","beginPath","arc","PI","closePath","fill","stroke","drawFlower","setTimeout","requestAnimationFrame","useStyle","makeStyles","media","card","marginTop","marginBottom","minHeight","backgroundColor","buttons","color","border","margin","textShadow","withRouter","classes","Card","className","CardMedia","image","Typography","style","projectDescription","Button","variant","onClick","url","history","push","open","projectName","github","useStyles","root","bullet","display","transform","title","fontSize","pos","name","body","HomeNav","position","top","maxWidth","Grid","item","xs","Avatar","alt","src","CardContent","IconButton","location","href","Portfolio","direction","container","wrap","justify","alignItems","sm","md","lg","align","description","map","project","goback","nav","goBack","changeDrawing","event","currentTarget","swal","text","timer","then","setActive","Tree","drawTree","startx","startv","len","branchWidth","color1","color2","save","shadowBlur","shadowColor","translate","rotate","moveTo","bezierCurveTo","restore","Random","line","Canvas","shouldShow","setShouldShow","active","endFlower","sizeListener","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d39ed62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {useEffect, useRef, useState} from 'react';\nimport './CanvasFlower.css';\n\n\nconst CanvasFlower = (props) => {\n    const [done, setDone] = useState(false);\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight});\n    const ref = useRef();\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        // window.location.reload();\n    }\n\n    useEffect(() => { \n        const canvas = ref.current;\n        const c = canvas.getContext('2d');\n        c.globalCompositeOperation = 'destination-over';\n\n        let stop = true\n        let number = 0;\n        let scale = 10;\n        let hue = Math.random() * 360;\n\n        function reset(){\n        // console.log('trying to reset');\n        // console.log(`number is:${number} scale is:${scale}`);\n        c.clearRect(0, 0, canvas.width, canvas.height);\n        number = 0;\n        scale = 10;\n        hue = Math.random() * 360;\n        animate();\n        }\n        \n        function drawFlower() {\n            let angle = number * .9;\n            let radius = scale * Math.sqrt(number);\n            let positionX = radius * Math.sin(angle) + canvas.width / 2;\n            let positionY = radius * Math.cos(angle) + canvas.height / 2;\n            c.fillStyle = `hsl(${hue}, 100%, 50%)`;\n            c.strokeStyle = `hsl(${hue}-1, 100%, 50%)`;\n            c.lineWidth = 15;\n            c.beginPath();\n            c.arc(positionX, positionY, number, 0, Math.PI * 2);\n            c.closePath();\n            c.fill();\n            c.stroke();\n            hue += .05;\n            number += .3;\n        }\n\n        const animate = () => {\n            if(stop){\n            drawFlower();\n            if (number > 250) {\n               return setTimeout(() => {\n                     reset();\n                }, 50);\n                // return reset();\n            }else {\n            requestAnimationFrame(animate);}}\n        }\n        function setStop() {\n            stop = false\n        }\n        animate();\n\n        return setStop;\n    });\n\n\n\n    return(\n        <>\n        <canvas \n        ref={ref}\n        width={size.width}\n        height={size.height}\n        ></canvas>\n\n        </>\n    );\n}\n\nexport default CanvasFlower;","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, CardMedia, Typography, Button, makeStyles } from '@material-ui/core';\nimport { withRouter } from 'react-router';\n\nconst useStyle = makeStyles({\n    media:{\n        height: 250\n    },\n    card:{\n        marginTop: 40,\n        marginBottom: 40,\n        minHeight: 300,\n        backgroundColor: 'rgba(0,0,0,.5)',\n    },\n    buttons:{\n        color:'white',\n        border: '1px solid white',\n        margin: 15,\n        textShadow: \"1.5px 1.5px black\"\n\n    }\n})\n\n\nfunction PortfolioPiece(props){\n  const  classes = useStyle();\n\n  const toProject = () => {\n      if(props.url === \"/canvas\"){\n          props.history.push(props.url)\n        }else window.open(props.url)\n  }\n  const toGitHub = () => {\n      window.open(props.github)\n  }\n    return(\n        <>\n        <Card className={classes.card}>\n            <CardMedia \n                className={classes.media}\n                image={props.image}\n            />\n                <Typography style={{color: 'white', textShadow: \"1.5px 1.5px black\"}}>{props.projectDescription}</Typography>\n        \n                <Button \n                className={classes.buttons} \n                variant='outlined' \n                onClick={toProject}>\n                    To {props.projectName}\n                </Button>\n\n                {props.github != \"none\" && \n                    <Button \n                    className={classes.buttons} \n                    variant='outlined' \n                    onClick={toGitHub}>To GitHub</Button>}\n\n        </Card>\n        </>\n    );\n}\n\n\nexport default withRouter(PortfolioPiece);","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\n\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: 'rgba(0,0,0,.5)'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    name: {\n        color: 'white',\n        textShadow: \"1.5px 3.5px black\"\n    },\n    body: {\n\n        color: 'white',\n        textShadow: \"1.5px 1.5px black\",\n    },\n    media: {\n        marginTop: 40,\n        height: 200,\n        width: 200,\n    },\n});\n\n\nexport default function HomeNav(props) {\n    const classes = useStyles();\n\n    const goToGitHub = () => {\n        window.open(\"https://github.com/dustincote\");\n    };\n\n    const goToLinkedIn = () => {\n        window.open(\"https://www.linkedin.com/in/dustin-t-cote/\");\n    };\n\n    const goToEmail = () => {\n        window.location.href = \"mailto:dustincote@hotmail.com?subject=More Info Requested%20From%20Portfolio\";\n    }\n    const size = props.size\n\n    return (\n\n                    <Card className={classes.root}\n                        style={{\n                            marginTop: size.width>900? 0:20,\n                            height: size.width > 900 ? size.height : 'auto',\n                            position: size.width > 900 ? 'fixed' : 'relative',\n                            top: 0,\n                            maxWidth: size.width > 900 ? 300 : size.width\n                        }}>\n                        <Grid item xs={10}>\n                            <Avatar alt=\"Headshot\" src=\"headshot.jpeg\" className={classes.media} />\n                            <CardContent>\n                                <Typography variant='h3' className={classes.name}>Dustin Cote</Typography>\n                                <Typography className={classes.body}>Full Stack Developer</Typography><br />\n                                <Typography className={classes.body}> I will be graduating from Emerging Digital Academy\n                                in the beginning of December 2020, I have a passion for technology and a desire to\n                                learn new things.\n                                </Typography><br />\n                                <Typography className={classes.body}> Contact Me:</Typography>\n                                <Typography className={classes.body}>dustincote@hotmail.com</Typography>\n                                <IconButton onClick={goToLinkedIn} className={classes.body}><LinkedInIcon /></IconButton>\n                                <IconButton onClick={goToGitHub} className={classes.body}><GitHubIcon /></IconButton>\n                                <IconButton onClick={goToEmail} className={classes.body}><ContactMailIcon /></IconButton>\n\n                            </CardContent>\n                        </Grid>\n                    </Card>\n              \n    );\n}\n\n\n","import React, { useState, useEffect} from 'react';\nimport './Portfolio.css';\nimport { withRouter } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport PortfolioPiece from '../PortfoilioPiece/PortfolioPiece';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport HomeNav from '../HomeNav/HomeNav';\n\n\nconst useStyles = makeStyles({\n    root: {\n        minHeight: window.innerHeight,\n        backgroundColor: 'rgba(0,0,0,.5)'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    name: {\n        color: 'white',\n        textShadow: \"1.5px 3.5px black\"\n    },\n    body:{\n        \n        color:'white',\n        textShadow: \"1.5px 1.5px black\",\n    },\n    media:{\n        marginTop: 40,\n        height: 200,\n        width: 200,\n    },\n});\n\n\nexport default  function Portfolio(props) {\n    const classes = useStyles();\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n    const projects = [\n        {\n            name:'Herdsman',\n            image: \"herdsman.jpeg\",\n            description: 'Herdsman, A herd management system for ranchers',\n            url: \"https://herdsman.herokuapp.com/#/home\",\n            github: \"https://github.com/dustincote/eda-solo-project\"\n        },\n\n        {\n            name: 'Html5 Canvas Fun',\n            image: \"canvasfun.jpeg\",\n            description: 'Just some fun with Canvas',\n            url: \"/canvas\",\n            github: \"none\"\n        },\n        {\n            name: 'Image Gallery',\n            image: \"imagegallery.jpeg\",\n            description: 'First ever react App',\n            url: \"/https://ancient-spire-49988.herokuapp.com/\",\n            github: \"https://github.com/dustincote/image-gallery\"\n        },\n        {\n            name: 'ToDo app',\n            image: \"todoapp.jpeg\",\n            description: 'Simple Jquery ToDo App',\n            url: \"https://intense-savannah-07225.herokuapp.com/\",\n            github: \"https://github.com/dustincote?tab=repositories\"\n        },\n\n    ]\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        // console.log(`Width: ${window.innerWidth} Height: ${window.innerHeight}`);\n    }\n\n\n\n    return(\n\n        <div>\n            <Grid direction={size.width > 900 ? 'row': 'column'} container wrap='nowrap' justify='flex-start' alignItems='center' >\n                <Grid item xs={10} sm={10} md={4} lg={3} align='center'>\n                    <HomeNav size={size}/>  \n                </Grid>\n                <Grid container justify='center' alignItems='center'>\n                    {projects.map(project =>  <Grid key={project.name} item xs={12} md={12} lg={6} align='center' >\n                       <Grid item xs={10} md={8}>\n                            <PortfolioPiece\n                            key={project.name}\n                            image={project.image}\n                            projectDescription={project.description}\n                            projectName={project.name}\n                            url={project.url}\n                            github={project.github}\n                             />\n                        </Grid>\n                    </Grid>)}\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport '../Home/Portfolio.css';\nimport { withRouter } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport { CardActions } from '@material-ui/core';\nimport swal from 'sweetalert';\n\nconst useStyles = makeStyles({\n    root: {\n        // minHeight: window.innerHeight,\n        backgroundColor: 'rgba(0,0,0,.5)',\n        \n    },\n    goback:{\n        color:'black',\n        width: 80\n    },\n    name: {\n        color: 'white',\n        textShadow: \"1.5px 3.5px black\"\n    },\n    body: {\n\n        color: 'white',\n        textShadow: \"1.5px 1.5px black\",\n    },\n    media: {\n        marginTop: 40,\n        height: 200,\n        width: 200,\n    },\n    nav:{\n        margin: 15,\n        color:'black',\n        width: 80,\n    },\n});\n\n\nfunction SideNav(props) {\n    const classes = useStyles();\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    }\n\n    const goBack = () => {\n        props.history.push('/');\n    }\n\n    const changeDrawing = (event) => {\n      let name=event.currentTarget.name\n        // console.log('event.target.name:', event.target.name,'event.currentTarget.name',event.currentTarget.name);\n        if (event.currentTarget.name === 'tree') {\n            swal({\n                title: \"Longer Render Time\",\n                text: \"Just wanted to let you know that the tree takes a little while to render, it is not broken.\",\n                timer: 2000,\n                buttons:false}).then(()=> {\n                    props.setActive(name);\n                })\n        } else {props.setActive(event.currentTarget.name);}\n    }\n\n    return (\n\n        <div>\n            {size.width>900? <Grid container wrap='nowrap' justify='flex-start' alignItems='center' >\n                <Grid item xs={8} sm={5} md={4} lg={2} align='center'>\n\n                    <Card className={classes.root} style={{ height: size.width>900?size.height:'auto'}}>\n                        <Grid item xs={10}>\n                            <Avatar alt=\"Headshot\" src=\"headshot.jpeg\" className={classes.media} />\n                            <CardContent>\n                                <Typography variant='h3' className={classes.name}>Dustin Cote</Typography>\n                                <Typography className={classes.body}>Full Stack Developer</Typography>\n                                <Typography className={classes.body}>DustinCote@hotmail.com</Typography><br/>\n\n                                \n                            </CardContent>\n                                <Button className={classes.goback} name='fibflower' onClick={changeDrawing} variant='contained' > Spiral</Button><br /><br />\n                                <Button className={classes.goback} name='tree' onClick={changeDrawing} variant='contained' > Tree</Button><br /><br />\n                                <Button className={classes.goback} name='random' onClick={changeDrawing} variant='contained' > Random</Button><br /><br />\n                                <Button className={classes.goback} onClick={goBack} variant='contained' ><ArrowBackIcon/> Back</Button>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>: \n            <div className='canvas-buttons'>\n            <Button className={classes.nav} name='fibflower' onClick={changeDrawing} variant='contained' > Spiral</Button>\n                                <Button className={classes.nav} name='tree' onClick={changeDrawing} variant='contained' > Tree</Button>\n                                <Button className={classes.nav} name='random' onClick={changeDrawing} variant='contained' > Random</Button>\n                                <Button className={classes.nav} onClick={goBack} variant='contained' ><ArrowBackIcon/> Back</Button>\n                                </div>\n            }\n        </div>\n    );\n}\n\nexport default withRouter(SideNav)","import React, { useEffect, useRef, useState } from 'react';\nimport './Tree.css';\n\n\nconst Tree = (props) => {\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    const ref = useRef();\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        // window.location.reload();\n    }\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const c = canvas.getContext('2d');\n        c.globalCompositeOperation = 'destination-over';\n\n\n        function drawTree(startx, startv, len, angle, branchWidth, color1, color2) {\n            c.beginPath();\n            c.save();\n            c.strokeStyle = color1;\n            c.fillStyle = color2;\n            c.shadowBlur = 15;\n            c.shadowColor = 'black';\n            c.lineWidth = branchWidth;\n            c.translate(startx, startv);\n            c.rotate(angle * Math.PI / 180);\n            c.moveTo(0, 0);\n            // c.lineTo(0, -len);\n            if (angle > 0) {\n                c.bezierCurveTo(20, -len / 2, 20, -len / 2, 0, -len);\n            } else {\n                c.bezierCurveTo(20, -len / 2, -20, -len / 2, 0, -len);\n            }\n            c.stroke();\n\n            if (len < 10) {\n                c.beginPath();\n                c.arc(0, -len, 10, 0, Math.PI / 2);\n                c.fill();\n                c.restore();\n                return;\n            }\n            drawTree(0, -len, len * 0.83, angle + 9, branchWidth * 0.6);\n            drawTree(0, -len, len * 0.83, angle - 9, branchWidth * 0.6);\n            c.restore();\n\n\n        }\n\n        drawTree(canvas.width / 2, canvas.height - 70, 100, 0, 25, 'brown', 'green');\n    });\n\n\n\n    return (\n        <>\n            <canvas\n                ref={ref}\n                width={size.width}\n                height={size.height}\n            ></canvas>\n\n        </>\n    );\n}\n\nexport default Tree;","import React, { useEffect, useRef, useState } from 'react';\nimport './Random.css';\n\n\nconst Random = (props) => {\n    const [done, setDone] = useState(false);\n    const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n    const ref = useRef();\n    useEffect(() => {\n        window.addEventListener('resize', sizeOfWindow);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeOfWindow)\n        }\n    }, []);\n\n    // useEffect(()=> {window.location.reload()},[]);\n\n    const sizeOfWindow = () => {\n        setSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        // window.location.reload();\n    }\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const c = canvas.getContext('2d');\n        c.globalCompositeOperation = 'destination-over';\n\n        let stop = true\n        let number = 0;\n        let scale = Math.random() * 5 + 2;\n        let line = Math.random() * 8 + 1\n        let hue = Math.random() * 360;\n\n        function reset() {\n            // console.log('trying to reset');\n            // console.log(`number is:${number} scale is:${scale}`);\n            c.clearRect(0, 0, canvas.width, canvas.height);\n            number = 0;\n            scale = Math.random() * 5 + 2;\n            hue = Math.random() * 360;\n            line = Math.random() * 8 + 1;\n            animate();\n        }\n\n        function drawFlower() {\n            let angle = number * .9;\n            let radius = scale * Math.sqrt(number);\n            let positionX = radius * Math.sin(angle) + canvas.width / 2;\n            let positionY = radius * Math.cos(angle) + canvas.height / 2;\n            c.fillStyle = `hsl(${hue}, 100%, 50%)`;\n            c.strokeStyle = `hsl(${hue}-1, 100%, 50%)`;\n            c.lineWidth = line;\n            c.beginPath();\n            c.arc(positionX, positionY, number, 0, Math.PI * 2);\n            c.closePath();\n            c.fill();\n            c.stroke();\n            hue += .05;\n            number += .3;\n        }\n\n        const animate = () => {\n            if(stop){\n            drawFlower();\n            if (number > 200) {\n                return setTimeout(() => {\n                    reset();\n                }, 50);\n                // return reset();\n            } else {\n                requestAnimationFrame(animate);\n            }}\n        }\n        function setStop (){\n            stop=false\n        }\n        animate();\n        return setStop;\n    });\n\n\n\n    return (\n        <>\n            <canvas\n                ref={ref}\n                width={size.width}\n                height={size.height}\n            ></canvas>\n\n        </>\n    );\n}\n\nexport default Random;","import React, { useState, useEffect } from 'react';\nimport CanvasFlower from '../CanvasFlower/CanvasFlower';\nimport SideNav from '../SideNav/SideNav';\nimport Button from '@material-ui/core/Button';\nimport Tree from '../Tree/Tree';\nimport Random from '../Random/Random';\n\n\n\nfunction Canvas(props) {\n const [shouldShow, setShouldShow] = useState(true);\n const [active, setActive] = useState('');\n useEffect(()=>{setActive('fibflower'); return endFlower;},[]);\n    useEffect(() => {\n        window.addEventListener('resize', sizeListener);\n\n        // returned function will be called on component unmount \n        return () => {\n            window.removeEventListener('resize', sizeListener);\n        }\n    }, []);\n\nconst endFlower = () => {\n    setActive('')\n}\n\nconst sizeListener = () => {\n    setShouldShow(false);\n    setTimeout(() =>  setShouldShow(true), 10);\n}\n\nconst goBack = () => {\n    console.log('button clicked');\n}\n\n    return(\n        <>\n        <SideNav setActive={setActive} />\n        {shouldShow && active === 'fibflower' &&<CanvasFlower/>}\n        {shouldShow && active === 'tree' &&<Tree/>}\n        {shouldShow && active === 'random' && <Random />}\n        </>\n    );\n}\n\nexport default Canvas;","import logo from './logo.svg';\nimport './App.css';\nimport CanvasFlower from './CanvasFlower/CanvasFlower';\nimport Portfolio from './Home/Portfolio';\nimport Canvas from './Canvas/Canvas';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n        <Route\n        exact\n        path=\"/\"\n        >\n            <Portfolio />\n\n          {/* <CanvasFlower /> */}\n        </Route>\n\n        <Route path=\"/canvas\">\n          <Canvas />\n        </Route>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}